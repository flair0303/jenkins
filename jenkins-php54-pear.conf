### php54-pear job conf for jenkins ###

export TOPDIR=$(rpm --eval='%{_topdir}')
export RPMDATE=`date "+%a %b %e %Y"`
export RESULT_DIR=/var/lib/mock/bluehost-6-php/result
export PHP_VERSION=`ls /admin/rchaudhry/src/ | perl -p -i -e 's/php-(\d.\d.\d*).tar.bz2/$1/'`
export PHP_OLD_VERSION=$((`echo $PHP_VERSION | cut -d. -f3` - 1))

### Update $VER_LIST when new build occurs ###
export BASE_DIR='/admin/rchaudhry/jenkins'
export VER_LIST="$BASE_DIR/php54_versions.conf"

export PREFIX='php54'
export PACKAGE_NAME='pear'
export DIST='ul6'
export CUR_VERSION=`grep $PACKAGE_NAME /admin/rchaudhry/jenkins/php54_versions.conf | perl -pi -e 's[$ENV{PACKAGE_NAME}: (.*)-(\d*) (.*)-(\d*)][$1]'`
export CUR_RELEASE=`grep $PACKAGE_NAME /admin/rchaudhry/jenkins/php54_versions.conf | perl -pi -e 's[$ENV{PACKAGE_NAME}: (.*)-(\d*) (.*)-(\d*)][$2]'`
export NEW_VERSION=`grep $PACKAGE_NAME /admin/rchaudhry/jenkins/php54_versions.conf | perl -pi -e 's[$ENV{PACKAGE_NAME}: (.*)-(\d*) (.*)-(\d*)][$3]'`
export NEW_RELEASE=`grep $PACKAGE_NAME /admin/rchaudhry/jenkins/php54_versions.conf | perl -pi -e 's[$ENV{PACKAGE_NAME}: (.*)-(\d*) (.*)-(\d*)][$4]'`
export PHP_FULL_VERSION=`find $RESULT_DIR -type f -name $PREFIX-$PHP_VERSION*.src.rpm | xargs -n1 basename | perl -pi -e 's[.*-(\d*.\d*.\d*-\d*).*][$1]'`
export REPO_LOC='http://mirrors-int.bluehost.com/source/centos6'
export PHP_CHANGELOG="Rebuild against php $PHP_VERSION"

### install the src rpm ###
# http://mirrors-int.bluehost.com/source/centos6/php54-pear-1.9.4-19.ul6.src.rpm
rpm -ivh $REPO_LOC/$PREFIX-$PACKAGE_NAME-$CUR_VERSION-$CUR_RELEASE.$DIST.src.rpm

### Update spec ###
perl -pi -e '$_ =~ s[Version: (\d.+)][Version: $ENV{NEW_VERSION}]' $TOPDIR/SPECS/$PREFIX-$PACKAGE_NAME.spec
perl -pi -e '$_ =~ s[Release: \d*.%{dist}][Release: $ENV{NEW_RELEASE}]' $TOPDIR/SPECS/$PREFIX-$PACKAGE_NAME.spec
perl -pi -e '$_ =~ s[BuildRequires: php%{phpver\}-cli >= 5.4.$ENV{PHP_OLD_VERSION}, php%{phpver}-common >= 5.4.$ENV{PHP_OLD_VERSION}, gnupg][BuildRequires: php%{phpver}-cli >= $ENV{PHP_VERSION}, php%{phpver}-common >= $ENV{PHP_VERSION}, gnupg]' $TOPDIR/SPECS/$PREFIX-$PACKAGE_NAME.spec
perl -pi -e '$_ =~ s[Requires: php%{phpver}-cli >= 5.4.$ENV{PHP_OLD_VERSION}][Requires: php%{phpver}-cli >= $ENV{PHP_VERSION}]' $TOPDIR/SPECS/$PREFIX-$PACKAGE_NAME.spec
perl -pi -e '$_ =~ s[%changelog][%changelog\n* $ENV{RPMDATE} Jenkins <jenkins\@bluehost.com> $ENV{NEW_VERSION}-$ENV{NEW_RELEASE}$ENV{DIST}\n- $ENV{PHP_CHANGELOG}\n]' $TOPDIR/SPECS/$PREFIX-$PACKAGE_NAME.spec

### Build new src rpm ###
rpmbuild -bs $TOPDIR/SPECS/$PREFIX-$PACKAGE_NAME.spec

### Mock it ###
export MOCK_CONF='bluehost-6-php'

# Install core packages to solve dep issues
/usr/bin/mock -r $MOCK_CONF --init
/usr/bin/mock -r $MOCK_CONF --install $BASE_DIR/rpms/$PHP_FULL_VERSION/$PREFIX-$PHP_FULL_VERSION.$DIST.x86_64.rpm $BASE_DIR/rpms/$PHP_FULL_VERSION/$PREFIX-cli-$PHP_FULL_VERSION.$DIST.x86_64.rpm $BASE_DIR/rpms/$PHP_FULL_VERSION/$PREFIX-common-$PHP_FULL_VERSION.$DIST.x86_64.rpm

# Now for the package in question
/usr/bin/mock -v -r $MOCK_CONF --no-clean $TOPDIR/SRPMS/$PREFIX-$PACKAGE_NAME-$NEW_VERSION-$NEW_RELEASE.src.rpm

### Copy the rpms over ###
if [ $? -eq 0 ]
then
  export RPM_DIR=/admin/rchaudhry/jenkins/rpms/$PHP_FULL_VERSION
  if [ ! -d $RPM_DIR ]
  then
    mkdir -p $RPM_DIR
  fi
  cp -f $RESULT_DIR/*.rpm $RPM_DIR/
fi
