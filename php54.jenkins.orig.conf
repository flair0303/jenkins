JENKINS PHP-FPM PROJECT ORIGINAL

### Set some vars ###
export TOPDIR=$(rpm --eval='%{_topdir}')
export DATE=`date "+%Y%m%d"`
export RPMDATE=`date "+%a %b %e %Y"`

# cleanup old tarball if exists
if [ -e "$TOPDIR/SOURCES/php-$PHP_VERSION.tar.gz" ]
then
    rm -f "$TOPDIR/SOURCES/php-$PHP_VERSION.tar.gz"
fi
TMPPATH=$(rpm --eval='%{_tmppath}')
if [ ! -d "$TMPPATH" ] || [ "$TMPPATH" = "/var/tmp" ]
then
    mkdir -p "$TOPDIR/tmp"
    echo "%_tmppath $TOPDIR/tmp" >> ~/.rpmmacros
    TMPPATH=$(rpm --eval='%{_tmppath}')
fi

### Grab the latest from github ###
### master branch currently contatins php 5.7
### /var/lib/jenkins/git/nova ###
### Jenkins can only talk to git.bh
### php-src.git needs to be created on git.bh
### refer to git:~/.bash_history

if [ ! -d "$HOME/git/php-src" ]
then
    mkdir -p $HOME/git
    cd $HOME/git
    git clone git://git.bluehost.com/php-src.git
fi

cd $HOME/git/php-src

# Fetch latest changes from Origin
# Keep things clean. Switch to master branch
# to delete/recreate/switchback to PHP-5.4 branch
git fetch
git checkout master
git branch -D PHP-5.4 || true
git checkout PHP-5.4

# More Vars #
# example : php-5.4.24.tar.bz2
export PHP_MAJOR_VERSION=`grep ^PHP_MAJOR_VERSION configure.in | perl -p -i -e 's/PHP_MAJOR_VERSION=(\d+)/$1/'`
export PHP_MINOR_VERSION=`grep ^PHP_MINOR_VERSION configure.in | perl -p -i -e 's/PHP_MINOR_VERSION=(\d+)/$1/'`
export PHP_RELEASE_VERSION=`grep ^PHP_RELEASE_VERSION configure.in | perl -p -i -e 's/PHP_RELEASE_VERSION=(\d+)/$1/'`
export PHP_EXTRA_VERSION=`grep ^PHP_EXTRA_VERSION configure.in | perl -p -i -e 's/PHP_EXTRA_VERSION=\"(.*)\"/$1/'`
export PHP_VERSION="$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION"
export PHP_FULL_VERSION="$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION"

# Grab last changelog in abbreviated fashion
export PHP_CHANGELOG="PHP-5.4 commit `git log --branches=PHP-5.4 --pretty=oneline --abbrev-commit -n 1`"

### Tar it up and grab latest spec ###
git archive --format=tar.gz --prefix=php-$PHP_VERSION/ PHP-5.4 > $TOPDIR/SOURCES/php-$PHP_VERSION.tar.gz
cp -f /build/specs/php54.spec $TOPDIR/SPECS/php54.spec

### Prep for Build ###
### TOPDIR=/var/lib/jenkins/rpmbuild ###
if [ ! -d "$TOPDIR" ]
then
    mkdir -p $HOME/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
    mkdir -p $HOME/rpmbuild/RPMS/{i386,x86_64}
    echo "%_topdir $HOME/rpmbuild" >> ~/.rpmmacros
    TOPDIR=$(rpm --eval='%{_topdir}')
fi

### Update spec ###
perl -pi -e '$_ =~ s/%global phpversion (.+)/%global phpversion $ENV{PHP_VERSION}/' $TOPDIR/SPECS/php54.spec
perl -pi -e '$_ =~ s/Release: \d+.ul6/Release: $ENV{PHP_EXTRA_VERSION}.ul6/' $TOPDIR/SPECS/php54.spec
perl -pi -e '$_ =~ s/Release: -(.*ul6)/Release: $1/' $TOPDIR/SPECS/php54.spec
perl -pi -e '$_ =~ s/%changelog/%changelog\n* $ENV{RPMDATE} Jenkins <jenkins\@bluehost.com> - $ENV{PHP_FULL_VERSION}\n- $ENV{PHP_CHANGELOG}\n/' $TOPDIR/SPECS/php54.spec

### create the new src.rpm ###
rpmbuild -bs $TOPDIR/SPECS/php54.spec

### Build the shit and copy to desired loc upon success ###
/usr/bin/mock -r bluehost-6-php --rebuild $TOPDIR/SRPMS/php54-$PHP_FULL_VERSION.ul6.src.rpm

if [ $? -eq 0 ]
then
  mkdir -p /build/php/$DATE/$PHP_FULL_VERSION
  cp /var/lib/mock/bluehost-6-php/result/*.rpm /build/php/$DATE/$PHP_FULL_VERSION/
  cp -f $TOPDIR/SPECS/php54.spec /build/specs/php54.spec
fi